[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "noreward-rl"
version = "1.0.0"
description = "Curiosity-Driven Exploration by Self-supervised Prediction - Modernized"
readme = "README_MODERN.md"
license = {text = "MIT"}
authors = [
    {name = "Deepak Pathak", email = "pathak@cs.cmu.edu"},
    {name = "Jaskaran Singh", email = "jaskaran.singh@sfsu.edu"}
]
maintainers = [
    {name = "Jaskaran Singh", email = "jaskaran.singh@sfsu.edu"}
]
keywords = [
    "reinforcement-learning",
    "curiosity-driven-exploration",
    "self-supervised-learning",
    "intrinsic-motivation",
    "a3c",
    "gymnasium",
    "tensorflow"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
requires-python = ">=3.8"
dependencies = [
    "gymnasium>=1.0.0",
    "tensorflow>=2.16.0",
    "numpy>=1.26.0",
    "scipy>=1.14.0",
    "Pillow>=11.0.0",
    "wandb>=0.16.0",
    "tensorboard>=2.16.0",
    "pyyaml>=6.0.0",
    "tqdm>=4.66.0",
    "matplotlib>=3.9.0",
    "opencv-python>=4.10.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.0",
    "pytest-cov>=5.0.0",
    "flake8>=7.3.0",
    "mypy>=1.18.0",
    "black>=24.10.0",
    "isort>=5.13.0",
    "pre-commit>=4.0.0",
]
atari = [
    "gymnasium[atari]>=1.0.0",
]
mario = [
    "gym-super-mario-bros>=7.4.0",
]
doom = [
    "vizdoom>=1.2.0",
]
all = [
    "gymnasium[atari,other]>=1.0.0",
    "gym-super-mario-bros>=7.4.0",
    "vizdoom>=1.2.0",
    "stable-baselines3[extra]>=2.2.0",
]

[project.urls]
Homepage = "https://github.com/jazhanma/noreward-rl"
Repository = "https://github.com/jazhanma/noreward-rl"
Documentation = "https://github.com/jazhanma/noreward-rl/blob/main/README_MODERN.md"
"Bug Tracker" = "https://github.com/jazhanma/noreward-rl/issues"
"Original Paper" = "https://pathak22.github.io/noreward-rl/"

[project.scripts]
noreward-train = "src.train_modern:main"
noreward-simple-train = "src.simple_train:main"
noreward-eval = "scripts.eval_and_record:main"
noreward-benchmark = "scripts.benchmark_hard_exploration:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*", "utils*", "scripts*"]

[tool.setuptools.package-data]
"*" = ["*.py", "*.yaml", "*.yml", "*.json"]

[tool.black]
line-length = 127
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 127
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
no_strict_optional = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src", "utils", "scripts"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
